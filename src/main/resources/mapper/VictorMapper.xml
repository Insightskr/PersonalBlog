<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ins.blog.dao.VictorMapper">
    <resultMap id="BaseResultMap" type="com.ins.blog.entity.Victor">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="victor_name" jdbcType="VARCHAR" property="victorName"/>
        <result column="victor_email" jdbcType="VARCHAR" property="victorEmail"/>
        <result column="victor_password" jdbcType="VARCHAR" property="victorPassword"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, victor_name, victor_email, victor_password
  </sql>
    <select id="selectByExample" parameterType="com.ins.blog.entity.VictorExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from victor
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="com.ins.blog.entity.VictorExample">
        delete from victor
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ins.blog.entity.Victor">
    insert into victor (id, victor_name, victor_email, 
      victor_password)
    values (#{id,jdbcType=INTEGER}, #{victorName,jdbcType=VARCHAR}, #{victorEmail,jdbcType=VARCHAR}, 
      #{victorPassword,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.ins.blog.entity.Victor">
        insert into victor
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="victorName != null">
                victor_name,
            </if>
            <if test="victorEmail != null">
                victor_email,
            </if>
            <if test="victorPassword != null">
                victor_password,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="victorName != null">
                #{victorName,jdbcType=VARCHAR},
            </if>
            <if test="victorEmail != null">
                #{victorEmail,jdbcType=VARCHAR},
            </if>
            <if test="victorPassword != null">
                #{victorPassword,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ins.blog.entity.VictorExample" resultType="java.lang.Long">
        select count(id) from victor
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="loginCheck" resultType="java.lang.Integer">
     select
      case
      when (select id from victor where victor_name=#{name} and victor_password=#{password}) is null
      then 0
      else
      (select id from victor where victor_name=#{name} and victor_password=#{password})
      end
  </select>
    <select id="selectById" resultType="com.ins.blog.entity.Victor">
        select id,victor_name from victor where id=#{id};
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update victor
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.victorName != null">
                victor_name = #{record.victorName,jdbcType=VARCHAR},
            </if>
            <if test="record.victorEmail != null">
                victor_email = #{record.victorEmail,jdbcType=VARCHAR},
            </if>
            <if test="record.victorPassword != null">
                victor_password = #{record.victorPassword,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update victor
        set id = #{record.id,jdbcType=INTEGER},
        victor_name = #{record.victorName,jdbcType=VARCHAR},
        victor_email = #{record.victorEmail,jdbcType=VARCHAR},
        victor_password = #{record.victorPassword,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>